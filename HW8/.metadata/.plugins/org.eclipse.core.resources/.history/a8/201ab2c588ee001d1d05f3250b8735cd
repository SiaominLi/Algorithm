
public class HW08_4109037012_1 extends MaxLandArea {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

	@Override
	public int maxLandArea(int[][] array) {
		int result = 0;
        for(int i = 0 ; i < array.length ; i++){
            for(int j = 0 ; j < array[0].length ; j++){
                if(array[i][j] == 1){
                    result = Math.max(result, island(i, j, array));
                }
            }
        }
        return result;
	}
	
	private int island(int x, int y, int[][] grid){
        if(x < 0 || y < 0 || x >= grid.length || y >= grid[0].length || grid[x][y] == 0){
            return 0;
        }
        grid[x][y] = 0;
        return island(x + 1, y, grid) + island(x - 1, y, grid) + island(x, y + 1, grid) + island(x, y - 1, grid) + 1;
    }

}

//class Solution {
//    private int island(int x, int y, int[][] grid){
//        if(x < 0 || y < 0 || x >= grid.length || y >= grid[0].length || grid[x][y] == 0){
//            return 0;
//        }
//        grid[x][y] = 0;
//        return island(x + 1, y, grid) + island(x - 1, y, grid) + island(x, y + 1, grid) + island(x, y - 1, grid) + 1;
//    }
//    public int maxAreaOfIsland(int[][] grid) {
//        int result = 0;
//        for(int i = 0 ; i < grid.length ; i++){
//            for(int j = 0 ; j < grid[0].length ; j++){
//                if(grid[i][j] == 1){
//                    result = Math.max(result, island(i, j, grid));
//                }
//            }
//        }
//        return result;
//    }
//}